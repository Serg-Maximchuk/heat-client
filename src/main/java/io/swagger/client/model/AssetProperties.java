/*
 * HEAT API
 * The HEAT <u><b>INTERACTIVE</b></u> REST API, 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AssetProperties class
 */
@Schema(description = "AssetProperties class")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-28T22:39:51.557155300+03:00[Europe/Helsinki]")
public class AssetProperties {
  @SerializedName("account")
  private String account = null;

  @SerializedName("accountPublicName")
  private String accountPublicName = null;

  @SerializedName("asset")
  private String asset = null;

  @SerializedName("quantityQNT")
  private String quantityQNT = null;

  @SerializedName("decimals")
  private String decimals = null;

  @SerializedName("descriptionUrl")
  private String descriptionUrl = null;

  @SerializedName("descriptionHash")
  private String descriptionHash = null;

  @SerializedName("dillutable")
  private Boolean dillutable = false;

  @SerializedName("propertiesAccount")
  private String propertiesAccount = null;

  @SerializedName("propertiesProtocol")
  private Integer propertiesProtocol = null;

  @SerializedName("properties")
  private String properties = null;

  @SerializedName("timestamp")
  private Integer timestamp = null;

  public AssetProperties account(String account) {
    this.account = account;
    return this;
  }

   /**
   * The number of the account that issued the asset
   * @return account
  **/
  @Schema(required = true, description = "The number of the account that issued the asset")
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }

  public AssetProperties accountPublicName(String accountPublicName) {
    this.accountPublicName = accountPublicName;
    return this;
  }

   /**
   * The account public name that issued the asset
   * @return accountPublicName
  **/
  @Schema(required = true, description = "The account public name that issued the asset")
  public String getAccountPublicName() {
    return accountPublicName;
  }

  public void setAccountPublicName(String accountPublicName) {
    this.accountPublicName = accountPublicName;
  }

  public AssetProperties asset(String asset) {
    this.asset = asset;
    return this;
  }

   /**
   * The asset ID
   * @return asset
  **/
  @Schema(required = true, description = "The asset ID")
  public String getAsset() {
    return asset;
  }

  public void setAsset(String asset) {
    this.asset = asset;
  }

  public AssetProperties quantityQNT(String quantityQNT) {
    this.quantityQNT = quantityQNT;
    return this;
  }

   /**
   * The total asset quantity (in QNT) in existence
   * @return quantityQNT
  **/
  @Schema(required = true, description = "The total asset quantity (in QNT) in existence")
  public String getQuantityQNT() {
    return quantityQNT;
  }

  public void setQuantityQNT(String quantityQNT) {
    this.quantityQNT = quantityQNT;
  }

  public AssetProperties decimals(String decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * The number of decimal places used by the asset
   * @return decimals
  **/
  @Schema(required = true, description = "The number of decimal places used by the asset")
  public String getDecimals() {
    return decimals;
  }

  public void setDecimals(String decimals) {
    this.decimals = decimals;
  }

  public AssetProperties descriptionUrl(String descriptionUrl) {
    this.descriptionUrl = descriptionUrl;
    return this;
  }

   /**
   * HTTP/HTTPS url pointing to the asset description file
   * @return descriptionUrl
  **/
  @Schema(required = true, description = "HTTP/HTTPS url pointing to the asset description file")
  public String getDescriptionUrl() {
    return descriptionUrl;
  }

  public void setDescriptionUrl(String descriptionUrl) {
    this.descriptionUrl = descriptionUrl;
  }

  public AssetProperties descriptionHash(String descriptionHash) {
    this.descriptionHash = descriptionHash;
    return this;
  }

   /**
   * SHA256 hash of description document contents as UTF-8 (hash is HEX string)
   * @return descriptionHash
  **/
  @Schema(required = true, description = "SHA256 hash of description document contents as UTF-8 (hash is HEX string)")
  public String getDescriptionHash() {
    return descriptionHash;
  }

  public void setDescriptionHash(String descriptionHash) {
    this.descriptionHash = descriptionHash;
  }

  public AssetProperties dillutable(Boolean dillutable) {
    this.dillutable = dillutable;
    return this;
  }

   /**
   * True in case new assets can later be issued by the asset issuer 
   * @return dillutable
  **/
  @Schema(required = true, description = "True in case new assets can later be issued by the asset issuer ")
  public Boolean isDillutable() {
    return dillutable;
  }

  public void setDillutable(Boolean dillutable) {
    this.dillutable = dillutable;
  }

  public AssetProperties propertiesAccount(String propertiesAccount) {
    this.propertiesAccount = propertiesAccount;
    return this;
  }

   /**
   * Asset properties account
   * @return propertiesAccount
  **/
  @Schema(required = true, description = "Asset properties account")
  public String getPropertiesAccount() {
    return propertiesAccount;
  }

  public void setPropertiesAccount(String propertiesAccount) {
    this.propertiesAccount = propertiesAccount;
  }

  public AssetProperties propertiesProtocol(Integer propertiesProtocol) {
    this.propertiesProtocol = propertiesProtocol;
    return this;
  }

   /**
   * Asset properties protocol
   * @return propertiesProtocol
  **/
  @Schema(required = true, description = "Asset properties protocol")
  public Integer getPropertiesProtocol() {
    return propertiesProtocol;
  }

  public void setPropertiesProtocol(Integer propertiesProtocol) {
    this.propertiesProtocol = propertiesProtocol;
  }

  public AssetProperties properties(String properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Asset properties based on protocol and account id
   * @return properties
  **/
  @Schema(required = true, description = "Asset properties based on protocol and account id")
  public String getProperties() {
    return properties;
  }

  public void setProperties(String properties) {
    this.properties = properties;
  }

  public AssetProperties timestamp(Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Asset properties timestamp
   * @return timestamp
  **/
  @Schema(required = true, description = "Asset properties timestamp")
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetProperties assetProperties = (AssetProperties) o;
    return Objects.equals(this.account, assetProperties.account) &&
        Objects.equals(this.accountPublicName, assetProperties.accountPublicName) &&
        Objects.equals(this.asset, assetProperties.asset) &&
        Objects.equals(this.quantityQNT, assetProperties.quantityQNT) &&
        Objects.equals(this.decimals, assetProperties.decimals) &&
        Objects.equals(this.descriptionUrl, assetProperties.descriptionUrl) &&
        Objects.equals(this.descriptionHash, assetProperties.descriptionHash) &&
        Objects.equals(this.dillutable, assetProperties.dillutable) &&
        Objects.equals(this.propertiesAccount, assetProperties.propertiesAccount) &&
        Objects.equals(this.propertiesProtocol, assetProperties.propertiesProtocol) &&
        Objects.equals(this.properties, assetProperties.properties) &&
        Objects.equals(this.timestamp, assetProperties.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, accountPublicName, asset, quantityQNT, decimals, descriptionUrl, descriptionHash, dillutable, propertiesAccount, propertiesProtocol, properties, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetProperties {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    accountPublicName: ").append(toIndentedString(accountPublicName)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    quantityQNT: ").append(toIndentedString(quantityQNT)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    descriptionUrl: ").append(toIndentedString(descriptionUrl)).append("\n");
    sb.append("    descriptionHash: ").append(toIndentedString(descriptionHash)).append("\n");
    sb.append("    dillutable: ").append(toIndentedString(dillutable)).append("\n");
    sb.append("    propertiesAccount: ").append(toIndentedString(propertiesAccount)).append("\n");
    sb.append("    propertiesProtocol: ").append(toIndentedString(propertiesProtocol)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
