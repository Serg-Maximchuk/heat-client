/*
 * HEAT API
 * The HEAT <u><b>INTERACTIVE</b></u> REST API, 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * EncryptedData class
 */
@Schema(description = "EncryptedData class")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-28T22:39:51.557155300+03:00[Europe/Helsinki]")
public class EncryptedData {
  @SerializedName("data")
  private String data = null;

  @SerializedName("nonce")
  private String nonce = null;

  public EncryptedData data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Encrypted data encoded as HEX
   * @return data
  **/
  @Schema(required = true, description = "Encrypted data encoded as HEX")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public EncryptedData nonce(String nonce) {
    this.nonce = nonce;
    return this;
  }

   /**
   * Nonce
   * @return nonce
  **/
  @Schema(required = true, description = "Nonce")
  public String getNonce() {
    return nonce;
  }

  public void setNonce(String nonce) {
    this.nonce = nonce;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EncryptedData encryptedData = (EncryptedData) o;
    return Objects.equals(this.data, encryptedData.data) &&
        Objects.equals(this.nonce, encryptedData.nonce);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, nonce);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EncryptedData {\n");
    
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
