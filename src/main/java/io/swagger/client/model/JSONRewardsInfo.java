/*
 * HEAT API
 * The HEAT <u><b>INTERACTIVE</b></u> REST API, 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * JSONRewardsInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-28T22:39:51.557155300+03:00[Europe/Helsinki]")
public class JSONRewardsInfo {
  @SerializedName("account")
  private String account = null;

  @SerializedName("accountName")
  private String accountName = null;

  @SerializedName("effectiveBalance")
  private String effectiveBalance = null;

  @SerializedName("totalRewards")
  private String totalRewards = null;

  @SerializedName("lastBlockTimestamp")
  private Integer lastBlockTimestamp = null;

  public JSONRewardsInfo account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @Schema(description = "")
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }

  public JSONRewardsInfo accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * Get accountName
   * @return accountName
  **/
  @Schema(description = "")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public JSONRewardsInfo effectiveBalance(String effectiveBalance) {
    this.effectiveBalance = effectiveBalance;
    return this;
  }

   /**
   * Get effectiveBalance
   * @return effectiveBalance
  **/
  @Schema(description = "")
  public String getEffectiveBalance() {
    return effectiveBalance;
  }

  public void setEffectiveBalance(String effectiveBalance) {
    this.effectiveBalance = effectiveBalance;
  }

  public JSONRewardsInfo totalRewards(String totalRewards) {
    this.totalRewards = totalRewards;
    return this;
  }

   /**
   * Get totalRewards
   * @return totalRewards
  **/
  @Schema(description = "")
  public String getTotalRewards() {
    return totalRewards;
  }

  public void setTotalRewards(String totalRewards) {
    this.totalRewards = totalRewards;
  }

  public JSONRewardsInfo lastBlockTimestamp(Integer lastBlockTimestamp) {
    this.lastBlockTimestamp = lastBlockTimestamp;
    return this;
  }

   /**
   * Get lastBlockTimestamp
   * @return lastBlockTimestamp
  **/
  @Schema(description = "")
  public Integer getLastBlockTimestamp() {
    return lastBlockTimestamp;
  }

  public void setLastBlockTimestamp(Integer lastBlockTimestamp) {
    this.lastBlockTimestamp = lastBlockTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JSONRewardsInfo jsONRewardsInfo = (JSONRewardsInfo) o;
    return Objects.equals(this.account, jsONRewardsInfo.account) &&
        Objects.equals(this.accountName, jsONRewardsInfo.accountName) &&
        Objects.equals(this.effectiveBalance, jsONRewardsInfo.effectiveBalance) &&
        Objects.equals(this.totalRewards, jsONRewardsInfo.totalRewards) &&
        Objects.equals(this.lastBlockTimestamp, jsONRewardsInfo.lastBlockTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, accountName, effectiveBalance, totalRewards, lastBlockTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JSONRewardsInfo {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    effectiveBalance: ").append(toIndentedString(effectiveBalance)).append("\n");
    sb.append("    totalRewards: ").append(toIndentedString(totalRewards)).append("\n");
    sb.append("    lastBlockTimestamp: ").append(toIndentedString(lastBlockTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
