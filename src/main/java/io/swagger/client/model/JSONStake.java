/*
 * HEAT API
 * The HEAT <u><b>INTERACTIVE</b></u> REST API, 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * JSONStake
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-28T22:39:51.557155300+03:00[Europe/Helsinki]")
public class JSONStake {
  @SerializedName("generatorCount")
  private Integer generatorCount = null;

  @SerializedName("generatorStake")
  private String generatorStake = null;

  @SerializedName("height")
  private Integer height = null;

  public JSONStake generatorCount(Integer generatorCount) {
    this.generatorCount = generatorCount;
    return this;
  }

   /**
   * Get generatorCount
   * @return generatorCount
  **/
  @Schema(description = "")
  public Integer getGeneratorCount() {
    return generatorCount;
  }

  public void setGeneratorCount(Integer generatorCount) {
    this.generatorCount = generatorCount;
  }

  public JSONStake generatorStake(String generatorStake) {
    this.generatorStake = generatorStake;
    return this;
  }

   /**
   * Get generatorStake
   * @return generatorStake
  **/
  @Schema(description = "")
  public String getGeneratorStake() {
    return generatorStake;
  }

  public void setGeneratorStake(String generatorStake) {
    this.generatorStake = generatorStake;
  }

  public JSONStake height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @Schema(description = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JSONStake jsONStake = (JSONStake) o;
    return Objects.equals(this.generatorCount, jsONStake.generatorCount) &&
        Objects.equals(this.generatorStake, jsONStake.generatorStake) &&
        Objects.equals(this.height, jsONStake.height);
  }

  @Override
  public int hashCode() {
    return Objects.hash(generatorCount, generatorStake, height);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JSONStake {\n");
    
    sb.append("    generatorCount: ").append(toIndentedString(generatorCount)).append("\n");
    sb.append("    generatorStake: ").append(toIndentedString(generatorStake)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
