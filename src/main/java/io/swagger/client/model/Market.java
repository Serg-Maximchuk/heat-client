/*
 * HEAT API
 * The HEAT <u><b>INTERACTIVE</b></u> REST API, 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Generic Market class
 */
@Schema(description = "Generic Market class")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-28T22:39:51.557155300+03:00[Europe/Helsinki]")
public class Market {
  @SerializedName("currency")
  private String currency = null;

  @SerializedName("asset")
  private String asset = null;

  @SerializedName("lastPrice")
  private String lastPrice = null;

  @SerializedName("hr24Change")
  private String hr24Change = null;

  @SerializedName("hr24High")
  private String hr24High = null;

  @SerializedName("hr24Low")
  private String hr24Low = null;

  @SerializedName("hr24CurrencyVolume")
  private String hr24CurrencyVolume = null;

  @SerializedName("hr24AssetVolume")
  private String hr24AssetVolume = null;

  @SerializedName("askOrderTotal")
  private String askOrderTotal = null;

  @SerializedName("bidOrderTotal")
  private String bidOrderTotal = null;

  @SerializedName("currencyProperties")
  private String currencyProperties = null;

  @SerializedName("assetProperties")
  private String assetProperties = null;

  @SerializedName("currencyDecimals")
  private Integer currencyDecimals = null;

  @SerializedName("assetDecimals")
  private Integer assetDecimals = null;

  public Market currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency id
   * @return currency
  **/
  @Schema(required = true, description = "Currency id")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Market asset(String asset) {
    this.asset = asset;
    return this;
  }

   /**
   * Asset id
   * @return asset
  **/
  @Schema(required = true, description = "Asset id")
  public String getAsset() {
    return asset;
  }

  public void setAsset(String asset) {
    this.asset = asset;
  }

  public Market lastPrice(String lastPrice) {
    this.lastPrice = lastPrice;
    return this;
  }

   /**
   * Last price
   * @return lastPrice
  **/
  @Schema(required = true, description = "Last price")
  public String getLastPrice() {
    return lastPrice;
  }

  public void setLastPrice(String lastPrice) {
    this.lastPrice = lastPrice;
  }

  public Market hr24Change(String hr24Change) {
    this.hr24Change = hr24Change;
    return this;
  }

   /**
   * 24 hour change percentage (double)
   * @return hr24Change
  **/
  @Schema(required = true, description = "24 hour change percentage (double)")
  public String getHr24Change() {
    return hr24Change;
  }

  public void setHr24Change(String hr24Change) {
    this.hr24Change = hr24Change;
  }

  public Market hr24High(String hr24High) {
    this.hr24High = hr24High;
    return this;
  }

   /**
   * 24 hour high
   * @return hr24High
  **/
  @Schema(required = true, description = "24 hour high")
  public String getHr24High() {
    return hr24High;
  }

  public void setHr24High(String hr24High) {
    this.hr24High = hr24High;
  }

  public Market hr24Low(String hr24Low) {
    this.hr24Low = hr24Low;
    return this;
  }

   /**
   * 24 hour low
   * @return hr24Low
  **/
  @Schema(required = true, description = "24 hour low")
  public String getHr24Low() {
    return hr24Low;
  }

  public void setHr24Low(String hr24Low) {
    this.hr24Low = hr24Low;
  }

  public Market hr24CurrencyVolume(String hr24CurrencyVolume) {
    this.hr24CurrencyVolume = hr24CurrencyVolume;
    return this;
  }

   /**
   * 24 hour currency volume
   * @return hr24CurrencyVolume
  **/
  @Schema(required = true, description = "24 hour currency volume")
  public String getHr24CurrencyVolume() {
    return hr24CurrencyVolume;
  }

  public void setHr24CurrencyVolume(String hr24CurrencyVolume) {
    this.hr24CurrencyVolume = hr24CurrencyVolume;
  }

  public Market hr24AssetVolume(String hr24AssetVolume) {
    this.hr24AssetVolume = hr24AssetVolume;
    return this;
  }

   /**
   * 24 hour asset volume
   * @return hr24AssetVolume
  **/
  @Schema(required = true, description = "24 hour asset volume")
  public String getHr24AssetVolume() {
    return hr24AssetVolume;
  }

  public void setHr24AssetVolume(String hr24AssetVolume) {
    this.hr24AssetVolume = hr24AssetVolume;
  }

  public Market askOrderTotal(String askOrderTotal) {
    this.askOrderTotal = askOrderTotal;
    return this;
  }

   /**
   * Total amount of all ask orders
   * @return askOrderTotal
  **/
  @Schema(required = true, description = "Total amount of all ask orders")
  public String getAskOrderTotal() {
    return askOrderTotal;
  }

  public void setAskOrderTotal(String askOrderTotal) {
    this.askOrderTotal = askOrderTotal;
  }

  public Market bidOrderTotal(String bidOrderTotal) {
    this.bidOrderTotal = bidOrderTotal;
    return this;
  }

   /**
   * Total amount of all bid orders
   * @return bidOrderTotal
  **/
  @Schema(required = true, description = "Total amount of all bid orders")
  public String getBidOrderTotal() {
    return bidOrderTotal;
  }

  public void setBidOrderTotal(String bidOrderTotal) {
    this.bidOrderTotal = bidOrderTotal;
  }

  public Market currencyProperties(String currencyProperties) {
    this.currencyProperties = currencyProperties;
    return this;
  }

   /**
   * Currency properties based on protocol and account id
   * @return currencyProperties
  **/
  @Schema(description = "Currency properties based on protocol and account id")
  public String getCurrencyProperties() {
    return currencyProperties;
  }

  public void setCurrencyProperties(String currencyProperties) {
    this.currencyProperties = currencyProperties;
  }

  public Market assetProperties(String assetProperties) {
    this.assetProperties = assetProperties;
    return this;
  }

   /**
   * Asset properties based on protocol and account id
   * @return assetProperties
  **/
  @Schema(description = "Asset properties based on protocol and account id")
  public String getAssetProperties() {
    return assetProperties;
  }

  public void setAssetProperties(String assetProperties) {
    this.assetProperties = assetProperties;
  }

  public Market currencyDecimals(Integer currencyDecimals) {
    this.currencyDecimals = currencyDecimals;
    return this;
  }

   /**
   * Currency decimals
   * @return currencyDecimals
  **/
  @Schema(description = "Currency decimals")
  public Integer getCurrencyDecimals() {
    return currencyDecimals;
  }

  public void setCurrencyDecimals(Integer currencyDecimals) {
    this.currencyDecimals = currencyDecimals;
  }

  public Market assetDecimals(Integer assetDecimals) {
    this.assetDecimals = assetDecimals;
    return this;
  }

   /**
   * Asset decimals
   * @return assetDecimals
  **/
  @Schema(description = "Asset decimals")
  public Integer getAssetDecimals() {
    return assetDecimals;
  }

  public void setAssetDecimals(Integer assetDecimals) {
    this.assetDecimals = assetDecimals;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Market market = (Market) o;
    return Objects.equals(this.currency, market.currency) &&
        Objects.equals(this.asset, market.asset) &&
        Objects.equals(this.lastPrice, market.lastPrice) &&
        Objects.equals(this.hr24Change, market.hr24Change) &&
        Objects.equals(this.hr24High, market.hr24High) &&
        Objects.equals(this.hr24Low, market.hr24Low) &&
        Objects.equals(this.hr24CurrencyVolume, market.hr24CurrencyVolume) &&
        Objects.equals(this.hr24AssetVolume, market.hr24AssetVolume) &&
        Objects.equals(this.askOrderTotal, market.askOrderTotal) &&
        Objects.equals(this.bidOrderTotal, market.bidOrderTotal) &&
        Objects.equals(this.currencyProperties, market.currencyProperties) &&
        Objects.equals(this.assetProperties, market.assetProperties) &&
        Objects.equals(this.currencyDecimals, market.currencyDecimals) &&
        Objects.equals(this.assetDecimals, market.assetDecimals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, asset, lastPrice, hr24Change, hr24High, hr24Low, hr24CurrencyVolume, hr24AssetVolume, askOrderTotal, bidOrderTotal, currencyProperties, assetProperties, currencyDecimals, assetDecimals);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Market {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    lastPrice: ").append(toIndentedString(lastPrice)).append("\n");
    sb.append("    hr24Change: ").append(toIndentedString(hr24Change)).append("\n");
    sb.append("    hr24High: ").append(toIndentedString(hr24High)).append("\n");
    sb.append("    hr24Low: ").append(toIndentedString(hr24Low)).append("\n");
    sb.append("    hr24CurrencyVolume: ").append(toIndentedString(hr24CurrencyVolume)).append("\n");
    sb.append("    hr24AssetVolume: ").append(toIndentedString(hr24AssetVolume)).append("\n");
    sb.append("    askOrderTotal: ").append(toIndentedString(askOrderTotal)).append("\n");
    sb.append("    bidOrderTotal: ").append(toIndentedString(bidOrderTotal)).append("\n");
    sb.append("    currencyProperties: ").append(toIndentedString(currencyProperties)).append("\n");
    sb.append("    assetProperties: ").append(toIndentedString(assetProperties)).append("\n");
    sb.append("    currencyDecimals: ").append(toIndentedString(currencyDecimals)).append("\n");
    sb.append("    assetDecimals: ").append(toIndentedString(assetDecimals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
