/*
 * HEAT API
 * The HEAT <u><b>INTERACTIVE</b></u> REST API, 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Generic Message class
 */
@Schema(description = "Generic Message class")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-28T22:39:51.557155300+03:00[Europe/Helsinki]")
public class Message {
  @SerializedName("transaction")
  private String transaction = null;

  @SerializedName("sender")
  private String sender = null;

  @SerializedName("recipient")
  private String recipient = null;

  @SerializedName("senderPrivateName")
  private String senderPrivateName = null;

  @SerializedName("recipientPrivateName")
  private String recipientPrivateName = null;

  @SerializedName("senderPublicName")
  private String senderPublicName = null;

  @SerializedName("recipientPublicName")
  private String recipientPublicName = null;

  @SerializedName("senderPublicKey")
  private String senderPublicKey = null;

  @SerializedName("recipientPublicKey")
  private String recipientPublicKey = null;

  @SerializedName("timestamp")
  private Integer timestamp = null;

  @SerializedName("blockId")
  private String blockId = null;

  @SerializedName("messageBytes")
  private String messageBytes = null;

  @SerializedName("messageIsText")
  private Boolean messageIsText = false;

  @SerializedName("messageIsEncrypted")
  private Boolean messageIsEncrypted = false;

  @SerializedName("messageIsEncryptedToSelf")
  private Boolean messageIsEncryptedToSelf = false;

  public Message transaction(String transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @Schema(description = "")
  public String getTransaction() {
    return transaction;
  }

  public void setTransaction(String transaction) {
    this.transaction = transaction;
  }

  public Message sender(String sender) {
    this.sender = sender;
    return this;
  }

   /**
   * Get sender
   * @return sender
  **/
  @Schema(description = "")
  public String getSender() {
    return sender;
  }

  public void setSender(String sender) {
    this.sender = sender;
  }

  public Message recipient(String recipient) {
    this.recipient = recipient;
    return this;
  }

   /**
   * Get recipient
   * @return recipient
  **/
  @Schema(description = "")
  public String getRecipient() {
    return recipient;
  }

  public void setRecipient(String recipient) {
    this.recipient = recipient;
  }

  public Message senderPrivateName(String senderPrivateName) {
    this.senderPrivateName = senderPrivateName;
    return this;
  }

   /**
   * Get senderPrivateName
   * @return senderPrivateName
  **/
  @Schema(description = "")
  public String getSenderPrivateName() {
    return senderPrivateName;
  }

  public void setSenderPrivateName(String senderPrivateName) {
    this.senderPrivateName = senderPrivateName;
  }

  public Message recipientPrivateName(String recipientPrivateName) {
    this.recipientPrivateName = recipientPrivateName;
    return this;
  }

   /**
   * Get recipientPrivateName
   * @return recipientPrivateName
  **/
  @Schema(description = "")
  public String getRecipientPrivateName() {
    return recipientPrivateName;
  }

  public void setRecipientPrivateName(String recipientPrivateName) {
    this.recipientPrivateName = recipientPrivateName;
  }

  public Message senderPublicName(String senderPublicName) {
    this.senderPublicName = senderPublicName;
    return this;
  }

   /**
   * Get senderPublicName
   * @return senderPublicName
  **/
  @Schema(description = "")
  public String getSenderPublicName() {
    return senderPublicName;
  }

  public void setSenderPublicName(String senderPublicName) {
    this.senderPublicName = senderPublicName;
  }

  public Message recipientPublicName(String recipientPublicName) {
    this.recipientPublicName = recipientPublicName;
    return this;
  }

   /**
   * Get recipientPublicName
   * @return recipientPublicName
  **/
  @Schema(description = "")
  public String getRecipientPublicName() {
    return recipientPublicName;
  }

  public void setRecipientPublicName(String recipientPublicName) {
    this.recipientPublicName = recipientPublicName;
  }

  public Message senderPublicKey(String senderPublicKey) {
    this.senderPublicKey = senderPublicKey;
    return this;
  }

   /**
   * Get senderPublicKey
   * @return senderPublicKey
  **/
  @Schema(description = "")
  public String getSenderPublicKey() {
    return senderPublicKey;
  }

  public void setSenderPublicKey(String senderPublicKey) {
    this.senderPublicKey = senderPublicKey;
  }

  public Message recipientPublicKey(String recipientPublicKey) {
    this.recipientPublicKey = recipientPublicKey;
    return this;
  }

   /**
   * Get recipientPublicKey
   * @return recipientPublicKey
  **/
  @Schema(description = "")
  public String getRecipientPublicKey() {
    return recipientPublicKey;
  }

  public void setRecipientPublicKey(String recipientPublicKey) {
    this.recipientPublicKey = recipientPublicKey;
  }

  public Message timestamp(Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(description = "")
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }

  public Message blockId(String blockId) {
    this.blockId = blockId;
    return this;
  }

   /**
   * Get blockId
   * @return blockId
  **/
  @Schema(description = "")
  public String getBlockId() {
    return blockId;
  }

  public void setBlockId(String blockId) {
    this.blockId = blockId;
  }

  public Message messageBytes(String messageBytes) {
    this.messageBytes = messageBytes;
    return this;
  }

   /**
   * Get messageBytes
   * @return messageBytes
  **/
  @Schema(description = "")
  public String getMessageBytes() {
    return messageBytes;
  }

  public void setMessageBytes(String messageBytes) {
    this.messageBytes = messageBytes;
  }

  public Message messageIsText(Boolean messageIsText) {
    this.messageIsText = messageIsText;
    return this;
  }

   /**
   * Get messageIsText
   * @return messageIsText
  **/
  @Schema(description = "")
  public Boolean isMessageIsText() {
    return messageIsText;
  }

  public void setMessageIsText(Boolean messageIsText) {
    this.messageIsText = messageIsText;
  }

  public Message messageIsEncrypted(Boolean messageIsEncrypted) {
    this.messageIsEncrypted = messageIsEncrypted;
    return this;
  }

   /**
   * Get messageIsEncrypted
   * @return messageIsEncrypted
  **/
  @Schema(description = "")
  public Boolean isMessageIsEncrypted() {
    return messageIsEncrypted;
  }

  public void setMessageIsEncrypted(Boolean messageIsEncrypted) {
    this.messageIsEncrypted = messageIsEncrypted;
  }

  public Message messageIsEncryptedToSelf(Boolean messageIsEncryptedToSelf) {
    this.messageIsEncryptedToSelf = messageIsEncryptedToSelf;
    return this;
  }

   /**
   * Get messageIsEncryptedToSelf
   * @return messageIsEncryptedToSelf
  **/
  @Schema(description = "")
  public Boolean isMessageIsEncryptedToSelf() {
    return messageIsEncryptedToSelf;
  }

  public void setMessageIsEncryptedToSelf(Boolean messageIsEncryptedToSelf) {
    this.messageIsEncryptedToSelf = messageIsEncryptedToSelf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Message message = (Message) o;
    return Objects.equals(this.transaction, message.transaction) &&
        Objects.equals(this.sender, message.sender) &&
        Objects.equals(this.recipient, message.recipient) &&
        Objects.equals(this.senderPrivateName, message.senderPrivateName) &&
        Objects.equals(this.recipientPrivateName, message.recipientPrivateName) &&
        Objects.equals(this.senderPublicName, message.senderPublicName) &&
        Objects.equals(this.recipientPublicName, message.recipientPublicName) &&
        Objects.equals(this.senderPublicKey, message.senderPublicKey) &&
        Objects.equals(this.recipientPublicKey, message.recipientPublicKey) &&
        Objects.equals(this.timestamp, message.timestamp) &&
        Objects.equals(this.blockId, message.blockId) &&
        Objects.equals(this.messageBytes, message.messageBytes) &&
        Objects.equals(this.messageIsText, message.messageIsText) &&
        Objects.equals(this.messageIsEncrypted, message.messageIsEncrypted) &&
        Objects.equals(this.messageIsEncryptedToSelf, message.messageIsEncryptedToSelf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transaction, sender, recipient, senderPrivateName, recipientPrivateName, senderPublicName, recipientPublicName, senderPublicKey, recipientPublicKey, timestamp, blockId, messageBytes, messageIsText, messageIsEncrypted, messageIsEncryptedToSelf);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Message {\n");
    
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    senderPrivateName: ").append(toIndentedString(senderPrivateName)).append("\n");
    sb.append("    recipientPrivateName: ").append(toIndentedString(recipientPrivateName)).append("\n");
    sb.append("    senderPublicName: ").append(toIndentedString(senderPublicName)).append("\n");
    sb.append("    recipientPublicName: ").append(toIndentedString(recipientPublicName)).append("\n");
    sb.append("    senderPublicKey: ").append(toIndentedString(senderPublicKey)).append("\n");
    sb.append("    recipientPublicKey: ").append(toIndentedString(recipientPublicKey)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    messageBytes: ").append(toIndentedString(messageBytes)).append("\n");
    sb.append("    messageIsText: ").append(toIndentedString(messageIsText)).append("\n");
    sb.append("    messageIsEncrypted: ").append(toIndentedString(messageIsEncrypted)).append("\n");
    sb.append("    messageIsEncryptedToSelf: ").append(toIndentedString(messageIsEncryptedToSelf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
