/*
 * HEAT API
 * The HEAT <u><b>INTERACTIVE</b></u> REST API, 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Details why peer rejects the block. Here are the attributes by which the block is rejected.
 */
@Schema(description = "Details why peer rejects the block. Here are the attributes by which the block is rejected.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-28T22:39:51.557155300+03:00[Europe/Helsinki]")
public class PeerRejection {
  @SerializedName("timestamp")
  private Long timestamp = null;

  @SerializedName("peer")
  private Integer peer = null;

  @SerializedName("heightDelta")
  private Integer heightDelta = null;

  @SerializedName("commonBlockHeightDelta")
  private Integer commonBlockHeightDelta = null;

  @SerializedName("commonBlockId")
  private Integer commonBlockId = null;

  @SerializedName("commonMilestoneBlockId")
  private Integer commonMilestoneBlockId = null;

  @SerializedName("peerHasMoreBlocks")
  private Integer peerHasMoreBlocks = null;

  @SerializedName("cumulativeDifficultyRatio")
  private Integer cumulativeDifficultyRatio = null;

  public PeerRejection timestamp(Long timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp
   * @return timestamp
  **/
  @Schema(description = "Timestamp")
  public Long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  public PeerRejection peer(Integer peer) {
    this.peer = peer;
    return this;
  }

   /**
   * Peer
   * @return peer
  **/
  @Schema(description = "Peer")
  public Integer getPeer() {
    return peer;
  }

  public void setPeer(Integer peer) {
    this.peer = peer;
  }

  public PeerRejection heightDelta(Integer heightDelta) {
    this.heightDelta = heightDelta;
    return this;
  }

   /**
   * Delta between peers&#x27;s height and local height
   * @return heightDelta
  **/
  @Schema(description = "Delta between peers's height and local height")
  public Integer getHeightDelta() {
    return heightDelta;
  }

  public void setHeightDelta(Integer heightDelta) {
    this.heightDelta = heightDelta;
  }

  public PeerRejection commonBlockHeightDelta(Integer commonBlockHeightDelta) {
    this.commonBlockHeightDelta = commonBlockHeightDelta;
    return this;
  }

   /**
   * Non connected count
   * @return commonBlockHeightDelta
  **/
  @Schema(description = "Non connected count")
  public Integer getCommonBlockHeightDelta() {
    return commonBlockHeightDelta;
  }

  public void setCommonBlockHeightDelta(Integer commonBlockHeightDelta) {
    this.commonBlockHeightDelta = commonBlockHeightDelta;
  }

  public PeerRejection commonBlockId(Integer commonBlockId) {
    this.commonBlockId = commonBlockId;
    return this;
  }

   /**
   * Common block id
   * @return commonBlockId
  **/
  @Schema(description = "Common block id")
  public Integer getCommonBlockId() {
    return commonBlockId;
  }

  public void setCommonBlockId(Integer commonBlockId) {
    this.commonBlockId = commonBlockId;
  }

  public PeerRejection commonMilestoneBlockId(Integer commonMilestoneBlockId) {
    this.commonMilestoneBlockId = commonMilestoneBlockId;
    return this;
  }

   /**
   * Common milestone block id
   * @return commonMilestoneBlockId
  **/
  @Schema(description = "Common milestone block id")
  public Integer getCommonMilestoneBlockId() {
    return commonMilestoneBlockId;
  }

  public void setCommonMilestoneBlockId(Integer commonMilestoneBlockId) {
    this.commonMilestoneBlockId = commonMilestoneBlockId;
  }

  public PeerRejection peerHasMoreBlocks(Integer peerHasMoreBlocks) {
    this.peerHasMoreBlocks = peerHasMoreBlocks;
    return this;
  }

   /**
   * Is peer has more blocks
   * @return peerHasMoreBlocks
  **/
  @Schema(description = "Is peer has more blocks")
  public Integer getPeerHasMoreBlocks() {
    return peerHasMoreBlocks;
  }

  public void setPeerHasMoreBlocks(Integer peerHasMoreBlocks) {
    this.peerHasMoreBlocks = peerHasMoreBlocks;
  }

  public PeerRejection cumulativeDifficultyRatio(Integer cumulativeDifficultyRatio) {
    this.cumulativeDifficultyRatio = cumulativeDifficultyRatio;
    return this;
  }

   /**
   * Cumulative difficulty ratio (peer&#x27;s cumulative difficulty divided to local cumulative difficulty)
   * @return cumulativeDifficultyRatio
  **/
  @Schema(description = "Cumulative difficulty ratio (peer's cumulative difficulty divided to local cumulative difficulty)")
  public Integer getCumulativeDifficultyRatio() {
    return cumulativeDifficultyRatio;
  }

  public void setCumulativeDifficultyRatio(Integer cumulativeDifficultyRatio) {
    this.cumulativeDifficultyRatio = cumulativeDifficultyRatio;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeerRejection peerRejection = (PeerRejection) o;
    return Objects.equals(this.timestamp, peerRejection.timestamp) &&
        Objects.equals(this.peer, peerRejection.peer) &&
        Objects.equals(this.heightDelta, peerRejection.heightDelta) &&
        Objects.equals(this.commonBlockHeightDelta, peerRejection.commonBlockHeightDelta) &&
        Objects.equals(this.commonBlockId, peerRejection.commonBlockId) &&
        Objects.equals(this.commonMilestoneBlockId, peerRejection.commonMilestoneBlockId) &&
        Objects.equals(this.peerHasMoreBlocks, peerRejection.peerHasMoreBlocks) &&
        Objects.equals(this.cumulativeDifficultyRatio, peerRejection.cumulativeDifficultyRatio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, peer, heightDelta, commonBlockHeightDelta, commonBlockId, commonMilestoneBlockId, peerHasMoreBlocks, cumulativeDifficultyRatio);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeerRejection {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    peer: ").append(toIndentedString(peer)).append("\n");
    sb.append("    heightDelta: ").append(toIndentedString(heightDelta)).append("\n");
    sb.append("    commonBlockHeightDelta: ").append(toIndentedString(commonBlockHeightDelta)).append("\n");
    sb.append("    commonBlockId: ").append(toIndentedString(commonBlockId)).append("\n");
    sb.append("    commonMilestoneBlockId: ").append(toIndentedString(commonMilestoneBlockId)).append("\n");
    sb.append("    peerHasMoreBlocks: ").append(toIndentedString(peerHasMoreBlocks)).append("\n");
    sb.append("    cumulativeDifficultyRatio: ").append(toIndentedString(cumulativeDifficultyRatio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
