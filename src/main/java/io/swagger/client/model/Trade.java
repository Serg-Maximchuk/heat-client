/*
 * HEAT API
 * The HEAT <u><b>INTERACTIVE</b></u> REST API, 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Trade class
 */
@Schema(description = "Trade class")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-28T22:39:51.557155300+03:00[Europe/Helsinki]")
public class Trade {
  @SerializedName("block")
  private String block = null;

  @SerializedName("height")
  private Integer height = null;

  @SerializedName("timestamp")
  private Integer timestamp = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("asset")
  private String asset = null;

  @SerializedName("askOrder")
  private String askOrder = null;

  @SerializedName("bidOrder")
  private String bidOrder = null;

  @SerializedName("askOrderHeight")
  private Integer askOrderHeight = null;

  @SerializedName("bidOrderHeight")
  private Integer bidOrderHeight = null;

  @SerializedName("seller")
  private String seller = null;

  @SerializedName("sellerName")
  private String sellerName = null;

  @SerializedName("buyer")
  private String buyer = null;

  @SerializedName("buyerName")
  private String buyerName = null;

  @SerializedName("quantity")
  private String quantity = null;

  @SerializedName("price")
  private String price = null;

  @SerializedName("isBuy")
  private Boolean isBuy = false;

  @SerializedName("currencyProperties")
  private String currencyProperties = null;

  @SerializedName("assetProperties")
  private String assetProperties = null;

  public Trade block(String block) {
    this.block = block;
    return this;
  }

   /**
   * The ID of the block that contains the trade (0 for unconfirmed trades)
   * @return block
  **/
  @Schema(required = true, description = "The ID of the block that contains the trade (0 for unconfirmed trades)")
  public String getBlock() {
    return block;
  }

  public void setBlock(String block) {
    this.block = block;
  }

  public Trade height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * The height of the block that contains the trade (0 for unconfirmed trades)
   * @return height
  **/
  @Schema(required = true, description = "The height of the block that contains the trade (0 for unconfirmed trades)")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public Trade timestamp(Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * The trade timestamp (in seconds since 24 november 2013 00:00 UTC)
   * @return timestamp
  **/
  @Schema(required = true, description = "The trade timestamp (in seconds since 24 november 2013 00:00 UTC)")
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }

  public Trade currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * The currency ID
   * @return currency
  **/
  @Schema(required = true, description = "The currency ID")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Trade asset(String asset) {
    this.asset = asset;
    return this;
  }

   /**
   * The asset ID
   * @return asset
  **/
  @Schema(required = true, description = "The asset ID")
  public String getAsset() {
    return asset;
  }

  public void setAsset(String asset) {
    this.asset = asset;
  }

  public Trade askOrder(String askOrder) {
    this.askOrder = askOrder;
    return this;
  }

   /**
   * The ask order ID
   * @return askOrder
  **/
  @Schema(required = true, description = "The ask order ID")
  public String getAskOrder() {
    return askOrder;
  }

  public void setAskOrder(String askOrder) {
    this.askOrder = askOrder;
  }

  public Trade bidOrder(String bidOrder) {
    this.bidOrder = bidOrder;
    return this;
  }

   /**
   * The bid order ID
   * @return bidOrder
  **/
  @Schema(required = true, description = "The bid order ID")
  public String getBidOrder() {
    return bidOrder;
  }

  public void setBidOrder(String bidOrder) {
    this.bidOrder = bidOrder;
  }

  public Trade askOrderHeight(Integer askOrderHeight) {
    this.askOrderHeight = askOrderHeight;
    return this;
  }

   /**
   * The ask order height (0 for unconfirmed orders)
   * @return askOrderHeight
  **/
  @Schema(required = true, description = "The ask order height (0 for unconfirmed orders)")
  public Integer getAskOrderHeight() {
    return askOrderHeight;
  }

  public void setAskOrderHeight(Integer askOrderHeight) {
    this.askOrderHeight = askOrderHeight;
  }

  public Trade bidOrderHeight(Integer bidOrderHeight) {
    this.bidOrderHeight = bidOrderHeight;
    return this;
  }

   /**
   * The bid order height (0 for unconfirmed orders)
   * @return bidOrderHeight
  **/
  @Schema(required = true, description = "The bid order height (0 for unconfirmed orders)")
  public Integer getBidOrderHeight() {
    return bidOrderHeight;
  }

  public void setBidOrderHeight(Integer bidOrderHeight) {
    this.bidOrderHeight = bidOrderHeight;
  }

  public Trade seller(String seller) {
    this.seller = seller;
    return this;
  }

   /**
   * Numeric ID of the seller account
   * @return seller
  **/
  @Schema(required = true, description = "Numeric ID of the seller account")
  public String getSeller() {
    return seller;
  }

  public void setSeller(String seller) {
    this.seller = seller;
  }

  public Trade sellerName(String sellerName) {
    this.sellerName = sellerName;
    return this;
  }

   /**
   * Public name for seller account
   * @return sellerName
  **/
  @Schema(description = "Public name for seller account")
  public String getSellerName() {
    return sellerName;
  }

  public void setSellerName(String sellerName) {
    this.sellerName = sellerName;
  }

  public Trade buyer(String buyer) {
    this.buyer = buyer;
    return this;
  }

   /**
   * Numeric ID of the buyer account
   * @return buyer
  **/
  @Schema(required = true, description = "Numeric ID of the buyer account")
  public String getBuyer() {
    return buyer;
  }

  public void setBuyer(String buyer) {
    this.buyer = buyer;
  }

  public Trade buyerName(String buyerName) {
    this.buyerName = buyerName;
    return this;
  }

   /**
   * Public name for buyer account
   * @return buyerName
  **/
  @Schema(description = "Public name for buyer account")
  public String getBuyerName() {
    return buyerName;
  }

  public void setBuyerName(String buyerName) {
    this.buyerName = buyerName;
  }

  public Trade quantity(String quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The trade quantity (in QNT)
   * @return quantity
  **/
  @Schema(required = true, description = "The trade quantity (in QNT)")
  public String getQuantity() {
    return quantity;
  }

  public void setQuantity(String quantity) {
    this.quantity = quantity;
  }

  public Trade price(String price) {
    this.price = price;
    return this;
  }

   /**
   * The trade price (in QNT in case currency is an asset, in HQT in case currency is HEAT) (1 HQT equals 0.00000001 HEAT) 
   * @return price
  **/
  @Schema(required = true, description = "The trade price (in QNT in case currency is an asset, in HQT in case currency is HEAT) (1 HQT equals 0.00000001 HEAT) ")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public Trade isBuy(Boolean isBuy) {
    this.isBuy = isBuy;
    return this;
  }

   /**
   * Wheter this is a BUY trade (false in case of a SELL trade)
   * @return isBuy
  **/
  @Schema(required = true, description = "Wheter this is a BUY trade (false in case of a SELL trade)")
  public Boolean isIsBuy() {
    return isBuy;
  }

  public void setIsBuy(Boolean isBuy) {
    this.isBuy = isBuy;
  }

  public Trade currencyProperties(String currencyProperties) {
    this.currencyProperties = currencyProperties;
    return this;
  }

   /**
   * Currency properties based on protocol and account id (blank for all but &#x27;list account trades&#x27;)
   * @return currencyProperties
  **/
  @Schema(description = "Currency properties based on protocol and account id (blank for all but 'list account trades')")
  public String getCurrencyProperties() {
    return currencyProperties;
  }

  public void setCurrencyProperties(String currencyProperties) {
    this.currencyProperties = currencyProperties;
  }

  public Trade assetProperties(String assetProperties) {
    this.assetProperties = assetProperties;
    return this;
  }

   /**
   * Asset properties based on protocol and account id (blank for all but &#x27;list account trades&#x27;)
   * @return assetProperties
  **/
  @Schema(description = "Asset properties based on protocol and account id (blank for all but 'list account trades')")
  public String getAssetProperties() {
    return assetProperties;
  }

  public void setAssetProperties(String assetProperties) {
    this.assetProperties = assetProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Trade trade = (Trade) o;
    return Objects.equals(this.block, trade.block) &&
        Objects.equals(this.height, trade.height) &&
        Objects.equals(this.timestamp, trade.timestamp) &&
        Objects.equals(this.currency, trade.currency) &&
        Objects.equals(this.asset, trade.asset) &&
        Objects.equals(this.askOrder, trade.askOrder) &&
        Objects.equals(this.bidOrder, trade.bidOrder) &&
        Objects.equals(this.askOrderHeight, trade.askOrderHeight) &&
        Objects.equals(this.bidOrderHeight, trade.bidOrderHeight) &&
        Objects.equals(this.seller, trade.seller) &&
        Objects.equals(this.sellerName, trade.sellerName) &&
        Objects.equals(this.buyer, trade.buyer) &&
        Objects.equals(this.buyerName, trade.buyerName) &&
        Objects.equals(this.quantity, trade.quantity) &&
        Objects.equals(this.price, trade.price) &&
        Objects.equals(this.isBuy, trade.isBuy) &&
        Objects.equals(this.currencyProperties, trade.currencyProperties) &&
        Objects.equals(this.assetProperties, trade.assetProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(block, height, timestamp, currency, asset, askOrder, bidOrder, askOrderHeight, bidOrderHeight, seller, sellerName, buyer, buyerName, quantity, price, isBuy, currencyProperties, assetProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Trade {\n");
    
    sb.append("    block: ").append(toIndentedString(block)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    askOrder: ").append(toIndentedString(askOrder)).append("\n");
    sb.append("    bidOrder: ").append(toIndentedString(bidOrder)).append("\n");
    sb.append("    askOrderHeight: ").append(toIndentedString(askOrderHeight)).append("\n");
    sb.append("    bidOrderHeight: ").append(toIndentedString(bidOrderHeight)).append("\n");
    sb.append("    seller: ").append(toIndentedString(seller)).append("\n");
    sb.append("    sellerName: ").append(toIndentedString(sellerName)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    buyerName: ").append(toIndentedString(buyerName)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    isBuy: ").append(toIndentedString(isBuy)).append("\n");
    sb.append("    currencyProperties: ").append(toIndentedString(currencyProperties)).append("\n");
    sb.append("    assetProperties: ").append(toIndentedString(assetProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
